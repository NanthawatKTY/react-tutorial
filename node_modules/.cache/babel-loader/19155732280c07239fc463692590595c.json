{"ast":null,"code":"var _jsxFileName = \"E:\\\\WORKS\\\\Coding\\\\React\\\\react-tutorial\\\\src\\\\views\\\\AppUseEffect.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport '../App.css';\nimport './AppContainer.css';\nimport Popup from '../components/Popup';\nimport { Routes, Route } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction UseEffect() {\n  _s();\n\n  const [count, setCount] = useState(0); // const [isPopupOpen, setIsPopupOpen] = useState(false);\n  //initialize the state\n  // useEffect(() => {\n  //   console.log('useEffect');\n  // }, []); //[] dependency array = ไม่มีปัจจัยอะไรที่ทำให้ fx ทำงานอีกครั้งได้ รันครั้งเดียว\n  //ตัวที่ 2 เมื่อ count state มีการเปลี่ยนแปลง จะทำการรันคำสั่งใหม่\n  //จะทำหลังจากที่ return ทำงานเสร็จ\n  // useEffect(() => {\n  //     console.log('useEffect count = ' + count);\n  // }, [count]) //จะเกิดขึ้นเมื่อค่าใดเปลี่ยน\n  //Unmounting\n\n  useEffect(() => {\n    console.log(`useEffect NOW = ${count}`);\n    return () => {\n      console.log(`useEffect CLEAR = ${count}`);\n    };\n  }, [count]); // useEffect(() => {\n  //   console.log( `useEffect NOW`);\n  //   return () => {\n  //     console.log( `useEffect CLEAR`);\n  //   }\n  // }, [])\n  // let popup = null;\n  // if (isPopupOpen) {\n  //     popup = <Popup onPopupClose={() => setIsPopupOpen(false)} />;\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"app-section\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"UseEffect Page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary title\",\n        onClick: () => {\n          setCount(prev => prev + 1);\n        },\n        children: count\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this) // <section className=\"app-section\">\n  //   <div className=\"app-container\">\n  //       <h1>เก็บโค้ดส่วนลดไม่ทัน</h1>\n  //       <button onClick={() => setIsPopupOpen(true)}>เปิดป๊อปอัพ</button>\n  //       <p>น่ารัก</p><p>น่ารัก</p><p>น่ารัก</p><p>น่ารัก</p><p>น่ารัก</p><p>น่ารัก</p><p>น่ารัก</p><p>น่ารัก</p><p>น่ารัก</p><p>น่ารัก</p><p>น่ารัก</p><p>น่ารัก</p><p>น่ารัก</p><p>น่ารัก</p><p>น่ารัก</p><p>น่ารัก</p><p>น่ารัก</p><p>น่ารัก</p><p>น่ารัก</p><p>น่ารัก</p><p>น่ารัก</p><p>น่ารัก</p><p>น่ารัก</p><p>น่ารัก</p><p>น่ารัก</p><p>น่ารัก</p><p>น่ารัก</p><p>น่ารัก</p><p>น่ารัก</p><p>น่ารัก</p><p>น่ารัก</p><p>น่ารัก</p><p>น่ารัก</p><p>น่ารัก</p><p>น่ารัก</p><p>น่ารัก</p><p>น่ารัก</p><p>น่ารัก</p><p>น่ารัก</p><p>น่ารัก</p><p>น่ารัก</p><p>น่ารัก</p><p>น่ารัก</p><p>น่ารัก</p><p>น่ารัก</p><p>น่ารัก</p><p>น่ารัก</p><p>น่ารัก</p><p>น่ารัก</p><p>น่ารัก</p><p>น่ารัก</p><p>น่ารัก</p><p>น่ารัก</p><p>น่ารัก</p><p>น่ารัก</p><p>น่ารัก</p><p>น่ารัก</p><p>น่ารัก</p><p>น่ารัก</p><p>น่ารัก</p><p>น่ารัก</p><p>น่ารัก</p><p>น่ารัก</p><p>น่ารัก</p>\n  //   </div>\n  //   {popup}\n  // </section>\n  ;\n}\n\n_s(UseEffect, \"/xL7qdScToREtqzbt5GZ1kHtYjQ=\");\n\n_c = UseEffect;\nexport default UseEffect;\n\nvar _c;\n\n$RefreshReg$(_c, \"UseEffect\");","map":{"version":3,"names":["React","useEffect","useState","Popup","Routes","Route","UseEffect","count","setCount","console","log","prev"],"sources":["E:/WORKS/Coding/React/react-tutorial/src/views/AppUseEffect.js"],"sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport '../App.css';\r\nimport './AppContainer.css';\r\nimport Popup from '../components/Popup';\r\nimport { Routes, Route } from 'react-router-dom';\r\n\r\nfunction UseEffect() {\r\n\r\n  const [count, setCount] = useState(0);\r\n  // const [isPopupOpen, setIsPopupOpen] = useState(false);\r\n\r\n  //initialize the state\r\n  // useEffect(() => {\r\n  //   console.log('useEffect');\r\n  // }, []); //[] dependency array = ไม่มีปัจจัยอะไรที่ทำให้ fx ทำงานอีกครั้งได้ รันครั้งเดียว\r\n\r\n  //ตัวที่ 2 เมื่อ count state มีการเปลี่ยนแปลง จะทำการรันคำสั่งใหม่\r\n  //จะทำหลังจากที่ return ทำงานเสร็จ\r\n  // useEffect(() => {\r\n  //     console.log('useEffect count = ' + count);\r\n  // }, [count]) //จะเกิดขึ้นเมื่อค่าใดเปลี่ยน\r\n\r\n\r\n  //Unmounting\r\n  useEffect(() => {\r\n    console.log( `useEffect NOW = ${count}`);\r\n    return () => {\r\n      console.log( `useEffect CLEAR = ${count}`);\r\n    }\r\n  }, [count])\r\n\r\n  // useEffect(() => {\r\n  //   console.log( `useEffect NOW`);\r\n  //   return () => {\r\n  //     console.log( `useEffect CLEAR`);\r\n  //   }\r\n  // }, [])\r\n\r\n\r\n  // let popup = null;\r\n  // if (isPopupOpen) {\r\n  //     popup = <Popup onPopupClose={() => setIsPopupOpen(false)} />;\r\n  // }\r\n\r\n  return (\r\n    <section className=\"app-section\">\r\n      <div className=\"app-container\">\r\n          <h1>UseEffect Page</h1>\r\n          <button className=\"btn btn-primary title\" onClick={() => {setCount(prev => prev + 1)}}>{count}</button>\r\n      </div>    \r\n    </section>\r\n\r\n    // <section className=\"app-section\">\r\n    //   <div className=\"app-container\">\r\n    //       <h1>เก็บโค้ดส่วนลดไม่ทัน</h1>\r\n    //       <button onClick={() => setIsPopupOpen(true)}>เปิดป๊อปอัพ</button>\r\n    //       <p>น่ารัก</p><p>น่ารัก</p><p>น่ารัก</p><p>น่ารัก</p><p>น่ารัก</p><p>น่ารัก</p><p>น่ารัก</p><p>น่ารัก</p><p>น่ารัก</p><p>น่ารัก</p><p>น่ารัก</p><p>น่ารัก</p><p>น่ารัก</p><p>น่ารัก</p><p>น่ารัก</p><p>น่ารัก</p><p>น่ารัก</p><p>น่ารัก</p><p>น่ารัก</p><p>น่ารัก</p><p>น่ารัก</p><p>น่ารัก</p><p>น่ารัก</p><p>น่ารัก</p><p>น่ารัก</p><p>น่ารัก</p><p>น่ารัก</p><p>น่ารัก</p><p>น่ารัก</p><p>น่ารัก</p><p>น่ารัก</p><p>น่ารัก</p><p>น่ารัก</p><p>น่ารัก</p><p>น่ารัก</p><p>น่ารัก</p><p>น่ารัก</p><p>น่ารัก</p><p>น่ารัก</p><p>น่ารัก</p><p>น่ารัก</p><p>น่ารัก</p><p>น่ารัก</p><p>น่ารัก</p><p>น่ารัก</p><p>น่ารัก</p><p>น่ารัก</p><p>น่ารัก</p><p>น่ารัก</p><p>น่ารัก</p><p>น่ารัก</p><p>น่ารัก</p><p>น่ารัก</p><p>น่ารัก</p><p>น่ารัก</p><p>น่ารัก</p><p>น่ารัก</p><p>น่ารัก</p><p>น่ารัก</p><p>น่ารัก</p><p>น่ารัก</p><p>น่ารัก</p><p>น่ารัก</p><p>น่ารัก</p>\r\n    //   </div>\r\n    //   {popup}\r\n    // </section>\r\n  );\r\n}\r\n\r\nexport default UseEffect;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAO,YAAP;AACA,OAAO,oBAAP;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,kBAA9B;;;AAEA,SAASC,SAAT,GAAqB;EAAA;;EAEnB,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,CAAD,CAAlC,CAFmB,CAGnB;EAEA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EAGA;;EACAD,SAAS,CAAC,MAAM;IACdQ,OAAO,CAACC,GAAR,CAAc,mBAAkBH,KAAM,EAAtC;IACA,OAAO,MAAM;MACXE,OAAO,CAACC,GAAR,CAAc,qBAAoBH,KAAM,EAAxC;IACD,CAFD;EAGD,CALQ,EAKN,CAACA,KAAD,CALM,CAAT,CAlBmB,CAyBnB;EACA;EACA;EACA;EACA;EACA;EAGA;EACA;EACA;EACA;;EAEA,oBACE;IAAS,SAAS,EAAC,aAAnB;IAAA,uBACE;MAAK,SAAS,EAAC,eAAf;MAAA,wBACI;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI;QAAQ,SAAS,EAAC,uBAAlB;QAA0C,OAAO,EAAE,MAAM;UAACC,QAAQ,CAACG,IAAI,IAAIA,IAAI,GAAG,CAAhB,CAAR;QAA2B,CAArF;QAAA,UAAwFJ;MAAxF;QAAA;QAAA;QAAA;MAAA,QAFJ;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF,CAQE;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAfF;AAiBD;;GAvDQD,S;;KAAAA,S;AAyDT,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}